system:
  ## The available amount of memory, e.g., 256m, 1g, 3.5g
  ## The configuration will be automatically generated to provide the best
  ## performance while fitting into the memory
  ### Warning: DO NOT YOU this feature if you plan to customize the config files 
  ### of  php, apache, and Mariadb. Your config files may be overwritten.
  memory_limit: 256m

# The settings for the database (mariadb)
database:
  root_password_random: true

  # If you want to control the root password, set root_password_random to false
  # and set a root_password:
  #root_password: fqT!%gLsB55cJ!ZD

sites:
  default:
    ### The "default" section is optional
    ### The default site does not match all domains not listed elsewhere
    database_name: default_site
    database_password: 9&2H$gb?cJR7z8cx
  
  mysite.com:
    alias:
      - www.mysite.com
      - blog.mysite.com
    ### You can control the name of the database if you like If not set.
    ### the default value is the same as your domain name
    # database_name: Your-customized-database-name
    # database_user_name: your-customized-database-username
  #The most basic site can be configured with just a domain name
  t3.alicesu.ml:
  t4.alicesu.ml:
  t5.alicesu.ml:

## The optional auto backup and restore plan
backups:
  s3:
    ## Schedule in Cron schedule expression, see: https://crontab.guru/
    ## The schedule is required. Without it, the backup is disabled.
    schedule: "0 2 * * *"

    ## The bucket to store the backup. Optionally, you can provide this value
    ## using an environment variable BACKUP_BUCKET
    bucket: your_s3_bucket_name

    ## If enabled, when container starts with any of the two folders
    ##  /var/www/html and var/lib/mysql being empty,
    ## it be restored from the backup on S3 if available.
    auto_restore: true

    ## AWS key and secret key if you want to hard code them here.
    ## if  not provided, environment variables are used: AWS_ACCESS_KEY_ID, 
    ## AWS_SECRET_ACCESS_KEY, and AWS_REGION
    aws_access_key_id: your_aws_key
    aws_secret_access_key: your_aws_secret_key
    aws_region: us-east-1

    ## Overwrite the default endpoint URL. This is unnecessary if you are using
    ## Amazon S3, but is helpful if you are using another service with an S3
    ## compatible API, e.g., backblaze B2
    # endpoint: https://s3.us-west-000.backblazeb2.com

ssh:
  #ngrok_authtoken: your_ngrok_authtoken, get from ngrok.com

  ## Set a port number for internal use. Your container may not have access to
  ## port 22. This is NOT the port your ssh client connects to
  #port: 20460

  ## To enable ssh feature via ngrok, put your ngrok key here.
  ##  then, copy your public key to: /root/.ssh/authorized_keys
  ##  Find out your mapped address and port number on ngrok site: 
  ##     https://dashboard.ngrok.com/endpoints/status
  ##  Copy the domain part and the port part from the URL.
  ##  Example: if the URL shown on ngrok is tcp://6.tcp.ngrok.io:10642
  ##  you can ssh using command:
  ##  ssh root@6.tcp.ngrok.io -p 10642
